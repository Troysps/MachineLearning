使用Apriori算法: 关联分析
什么是关联分析?
	找出大规模数据集中寻找物品间的隐含关系
Apriori算法: 创建函数频繁项集高效发现的函数,从而从频繁项集中抽取关联规则
Apriori算法:
	优点: 易编码实现
	缺点: 在数据集上较慢
	使用数据类型: 数值型或者标称型

关联分析关键词:	
	频繁项集: 经常一起出现
	关联规则: 暗示两种物品之间可能存在很强的关系
	
如何量化频繁项集?频繁项集是指那些经常出现在一起的物品 
引入: 支持度和可信度---
支持度:数据集中包含该项集的记录所占的比例
可信度或置信度: 针对一条关联规则定义来进行定义的
例如:某个集合或某个元素集合--->推导出另一个元素
假设:定义一条关联规则 {豆奶 莴笋} ---> {莴笋} 意味着: 购买豆奶的同时,购买莴笋的概率也大 但是反之不成立 ----在逻辑上称为 前件-->后件
可信度规则量化: support(p|H) / supprot(P)

Apriori算法
Apriori算法是发现频繁项集的一种方法
Apriori算法的两个参数分别为最小支持度和数据集
算法思路:
	step1： 首先生成单个物品的项集列表
	step2: 	接着扫描交易记录来查看哪些项集满足最小支持度要求 将那些不满足最小支持度的项集会被去掉
	step3： 然后对剩下来的集合进行组合以生成包含两个元素的项集, 重新扫描交易记录,去掉不满足最小支持度的项集
	step4:	该过程重复进行直到所有项集都被去掉
	
Apriori算法实现--频繁项集
伪代码
	当集合中的个数大于0时
		构建一个k项组成的候选项集
		检查数据以确认每个项集都是频繁的
		保留频繁项集并构建k+1项组成的候选项集列表
	返回 满足支持度的所有频繁项集与其支持(字典形式) 以及 满足支持度的所有频繁项集(列表形式)
	
关联规则:support(p|H) / supprot(P)
目前已知: 频繁项集与 频繁项集对应的支持度
求关联规则
	关联规则--- 多个物品对少个物品
	因此分情况讨论:
	(1)当频繁项集中元素len=2
		{2个物品}与{1个物品}之间的关联规则
		可以直接计算置信度(可信度)
	(2)当频繁项集中元素len>2
		{3个物品}与{1个物品}
		{3个物品}与{2个物品}
		因此,此时需要不断递归出候选项集
		再计算置信度(可信度)
		
Apriori算法 概念以及解释
项与项集: 设$itemset{item_1, item_2,...,item_m}是所有项的集合, 其中, item_k(k=1, 2, ...m)成为项。项的集合称为项集(itemset),包含k个项的项集称为k项集$
事务与事务集:一个事务T是一个项集,它是itemset的一个子集,每个事务均与一个唯一标识符号Tid相联系,不同的事务一起组成了事务集D,构成了关联规则发现的事务数据库
关联规则:关联规则是形如A=>B的蕴含式,其中A、B均为itemset的子集且均不为空集,而A交B为空
支持度:数据集中包含该项集的记录所占的比例
	实质上: $support(A=>B) = P(A \cup B)$
	其中$P(A\cup B) 表示事务包含集合A和B的并(即包含A和B中的每个项)的概率, 注意P(A or B)区别, 后者表示事务包含A或B的概率$
置信度: 实质上就是事件A发生时,B发生的概率
	$confidence(A=>B) = P(B|A) = \frac{support(A \cup B)}{support(A)}$
频繁项集:$如果项集I的相对支持度满足事先定义好的最小支持度阈值(即I的出现频度大于相应的最小出现频度), 则I是频繁项集$
强关联规则:满足最小支持度和最小置信度的关联规则,即待挖掘的关联规则

剪枝策略:预先剪枝 ---- 对不满足最小支持度的项集不予考虑,直接删除
























